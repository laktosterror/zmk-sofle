#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/swedish.dtsi"


&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        bksp {
            bindings = <&kp BACKSPACE>;
            key-positions = <22 23>;
        };
    };

    macros {
        lambda: lambda {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "LAMBDA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC         &kp N1  &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8     &kp N9   &kp N0     &kp PLUS
&kp TAB         &kp Q   &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I      &kp O    &kp P      &kp RBKT
&kp LEFT_SHIFT  &kp A   &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K      &kp L    &kp SEMI   &mt RSHFT APOS
&kp LCTRL       &kp Z   &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA  &kp DOT  &kp SLASH  &kp ENTER
&kp C_MUTE      &trans  &kp LEFT_ALT  &kp LEFT_GUI  &mo 2   &kp SPACE    &kp ENTER        &kp SPACE  &mo 1   &kp SPACE  &kp DEL  &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            label = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp NUMBER_1     &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp RA(NUMBER_4)          &kp RA(NUMBER_5)    &mmv MOVE_UP     &kp NUMBER_6      &kp RA(NUMBER_7)          &kp RA(NUMBER_8)  &kp RA(NUMBER_9)  &kp RA(NUMBER_0)  &kp RA(PLUS)
&none       &none            &none             &none             &kp NON_US_BACKSLASH      &kp RA(NUMBER_7)    &mmv MOVE_DOWN   &kp RA(NUMBER_0)  &kp RS(NON_US_BACKSLASH)  &none             &none             &kp RBKT          &none
&trans      &none            &none             &none             &kp RA(NON_US_BACKSLASH)  &kp LS(NUMBER_8)    &mmv MOVE_LEFT   &kp RS(NUMBER_9)  &lambda                   &none             &none             &kp NON_US_HASH   &trans
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON    &rgb_ug RGB_EFF   &rgb_ug RGB_EFR           &kp RA(NUMBER_8)    &mmv MOVE_RIGHT  &kp RA(NUMBER_9)  &none                     &none             &none             &none             &trans
&kp C_MUTE  &trans           &trans            &trans            &trans                    &trans              &mkp LCLK        &trans            &trans                    &trans            &trans            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "LAYER1";
        };

        layer_2 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &trans  &kp F6          &kp F7             &kp F8            &kp F9           &kp F10  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp C_NEXT       &trans   &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW     &kp UP_ARROW      &kp RIGHT_ARROW  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp HOME        &kp PAGE_DOWN      &kp PAGE_UP       &kp END          &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans             &kp C_PLAY_PAUSE  &trans           &trans
            >;

            label = "LAYER2";
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans          &trans        &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "LAYER3";
        };
    };
};
